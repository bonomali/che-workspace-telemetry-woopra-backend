name: Publish Maven and NPM Artifacts

on: 
  push:
    branches:
      tomgeorge/build-docker-image
jobs:
  build_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.5
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Update version
      run: |
        pip install --user yq
        export PATH="/home/runner/.local/bin:$PATH"
        ./update-versions.sh
    - name: Make release commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "CI: Update release versions" -a
    - name: Maven install
      run: |
        mkdir -p ~/.m2
        mvn --settings settings.xml clean install -Dmaven.wagon.http.pool=false
      env:
        GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: x-access-token
    - name: Maven native package
      run: |
        wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.0.2/graalvm-ce-java11-linux-amd64-19.3.0.2.tar.gz
        tar -xf graalvm-ce-java11-linux-amd64-19.3.0.2.tar.gz
        export GRAALVM_HOME="$(pwd)/graalvm-ce-java11-19.3.0.2"
        export PATH=$GRAALVM_HOME/bin:$PATH
        ls -l
        env
        gu install native-image
        mvn --settings settings.xml clean package -Pnative
      env:
        GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: x-access-token
    - name: Build docker image
      run: |
        TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        docker build -t quay.io/eclipse/che-workspace-telemetry-woopra-backend:${TAG} -f src/main/docker/Dockerfile.native .
      env:
        GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: x-access-token
    - name: Push docker image
      run: |
        TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        docker push quay.io/eclipse/che-workspace-telemetry-woopra-backend:${VERSION}
      env:
        GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: x-access-token
    - name: Maven Deploy
      run: |
        mkdir -p ~/.m2
        mvn --settings settings.xml clean deploy -Dmaven.wagon.http.pool=false
      env: 
        GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: x-access-token
    - name: Push release commits
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: 'master'
